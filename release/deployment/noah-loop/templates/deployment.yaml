{{/* API Gateway Deployment */}}
{{- if .Values.apiGateway.enabled }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "noah-loop.fullname" . }}-api-gateway
  labels:
    {{- include "noah-loop.labels" . | nindent 4 }}
    app.kubernetes.io/component: api-gateway
spec:
  {{- if not .Values.apiGateway.autoscaling.enabled }}
  replicas: {{ .Values.apiGateway.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "noah-loop.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: api-gateway
  template:
    metadata:
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
        checksum/secret: {{ include (print $.Template.BasePath "/secret.yaml") . | sha256sum }}
      labels:
        {{- include "noah-loop.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: api-gateway
    spec:
      {{- with .Values.image.pullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "noah-loop.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: api-gateway
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: {{ include "noah-loop.image" (dict "registry" .Values.image.registry "repository" .Values.apiGateway.image.repository "tag" (.Values.apiGateway.image.tag | default .Chart.AppVersion)) }}
          imagePullPolicy: {{ .Values.apiGateway.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
            - name: grpc
              containerPort: 9090
              protocol: TCP
          env:
            {{- include "noah-loop.commonEnvVars" . | nindent 12 }}
            - name: HTTP_PORT
              value: "8080"
            - name: GRPC_PORT
              value: "9090"
          livenessProbe:
            {{- toYaml .Values.apiGateway.livenessProbe | nindent 12 }}
          readinessProbe:
            {{- toYaml .Values.apiGateway.readinessProbe | nindent 12 }}
          resources:
            {{- toYaml .Values.apiGateway.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
{{- end }}

{{/* 微服务 Deployment 模板 */}}
{{- range $serviceName, $service := .Values.services }}
{{- if $service.enabled }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "noah-loop.fullname" $ }}-{{ $serviceName }}
  labels:
    {{- include "noah-loop.labels" $ | nindent 4 }}
    app.kubernetes.io/component: {{ $serviceName }}
spec:
  {{- if not $service.autoscaling.enabled }}
  replicas: {{ $service.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "noah-loop.selectorLabels" $ | nindent 6 }}
      app.kubernetes.io/component: {{ $serviceName }}
  template:
    metadata:
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") $ | sha256sum }}
        checksum/secret: {{ include (print $.Template.BasePath "/secret.yaml") $ | sha256sum }}
      labels:
        {{- include "noah-loop.selectorLabels" $ | nindent 8 }}
        app.kubernetes.io/component: {{ $serviceName }}
    spec:
      {{- with $.Values.image.pullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "noah-loop.serviceAccountName" $ }}
      securityContext:
        {{- toYaml $.Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ $serviceName }}
          securityContext:
            {{- toYaml $.Values.securityContext | nindent 12 }}
          image: {{ include "noah-loop.image" (dict "registry" $.Values.image.registry "repository" $service.image.repository "tag" ($service.image.tag | default $.Chart.AppVersion)) }}
          imagePullPolicy: {{ $service.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ $service.service.targetPort }}
              protocol: TCP
            - name: grpc
              containerPort: {{ $service.service.grpcTargetPort }}
              protocol: TCP
          env:
            {{- include "noah-loop.commonEnvVars" $ | nindent 12 }}
            - name: HTTP_PORT
              value: {{ $service.service.targetPort | quote }}
            - name: GRPC_PORT
              value: {{ $service.service.grpcTargetPort | quote }}
            - name: SERVICE_NAME
              value: {{ $serviceName | quote }}
          livenessProbe:
            httpGet:
              path: /health
              port: http
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /ready
              port: http
            initialDelaySeconds: 5
            periodSeconds: 5
            timeoutSeconds: 3
            failureThreshold: 3
          resources:
            {{- toYaml $service.resources | nindent 12 }}
      {{- with $.Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with $.Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with $.Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
{{- end }}
{{- end }}
