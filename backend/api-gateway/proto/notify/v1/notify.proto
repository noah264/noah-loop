syntax = "proto3";

package notify.v1;

option go_package = "github.com/noah-loop/backend/api-gateway/proto/notify/v1";

import "google/protobuf/timestamp.proto";
import "google/protobuf/empty.proto";

// NotifyService 通知服务
service NotifyService {
  // 创建通知
  rpc CreateNotification(CreateNotificationRequest) returns (CreateNotificationResponse);
  
  // 从模板创建通知
  rpc CreateNotificationFromTemplate(CreateNotificationFromTemplateRequest) returns (CreateNotificationResponse);
  
  // 获取通知详情
  rpc GetNotification(GetNotificationRequest) returns (GetNotificationResponse);
  
  // 列出通知
  rpc ListNotifications(ListNotificationsRequest) returns (ListNotificationsResponse);
  
  // 发送通知
  rpc SendNotification(SendNotificationRequest) returns (SendNotificationResponse);
  
  // 取消通知
  rpc CancelNotification(CancelNotificationRequest) returns (CancelNotificationResponse);
  
  // 重试通知
  rpc RetryNotification(RetryNotificationRequest) returns (RetryNotificationResponse);
  
  // 批量发送通知
  rpc BatchSendNotifications(BatchSendNotificationsRequest) returns (BatchSendNotificationsResponse);
  
  // 创建通知模板
  rpc CreateTemplate(CreateTemplateRequest) returns (CreateTemplateResponse);
  
  // 获取模板详情
  rpc GetTemplate(GetTemplateRequest) returns (GetTemplateResponse);
  
  // 渲染模板
  rpc RenderTemplate(RenderTemplateRequest) returns (RenderTemplateResponse);
  
  // 创建渠道配置
  rpc CreateChannelConfig(CreateChannelConfigRequest) returns (CreateChannelConfigResponse);
  
  // 测试渠道
  rpc TestChannel(TestChannelRequest) returns (TestChannelResponse);
  
  // 获取通知统计
  rpc GetNotificationStats(GetNotificationStatsRequest) returns (GetNotificationStatsResponse);
  
  // 健康检查
  rpc Health(google.protobuf.Empty) returns (HealthResponse);
}

// 通知状态枚举
enum NotificationStatus {
  NOTIFICATION_STATUS_UNSPECIFIED = 0;
  NOTIFICATION_STATUS_PENDING = 1;
  NOTIFICATION_STATUS_SENDING = 2;
  NOTIFICATION_STATUS_SENT = 3;
  NOTIFICATION_STATUS_DELIVERED = 4;
  NOTIFICATION_STATUS_FAILED = 5;
  NOTIFICATION_STATUS_CANCELLED = 6;
}

// 通知优先级枚举
enum NotificationPriority {
  NOTIFICATION_PRIORITY_UNSPECIFIED = 0;
  NOTIFICATION_PRIORITY_LOW = 1;
  NOTIFICATION_PRIORITY_NORMAL = 2;
  NOTIFICATION_PRIORITY_HIGH = 3;
  NOTIFICATION_PRIORITY_URGENT = 4;
}

// 通知类型枚举
enum NotificationType {
  NOTIFICATION_TYPE_UNSPECIFIED = 0;
  NOTIFICATION_TYPE_SYSTEM = 1;
  NOTIFICATION_TYPE_MARKETING = 2;
  NOTIFICATION_TYPE_REMINDER = 3;
  NOTIFICATION_TYPE_ALERT = 4;
  NOTIFICATION_TYPE_VERIFY = 5;
  NOTIFICATION_TYPE_WORKFLOW = 6;
}

// 通知渠道枚举
enum NotificationChannel {
  NOTIFICATION_CHANNEL_UNSPECIFIED = 0;
  NOTIFICATION_CHANNEL_EMAIL = 1;
  NOTIFICATION_CHANNEL_SMS = 2;
  NOTIFICATION_CHANNEL_PUSH = 3;
  NOTIFICATION_CHANNEL_WEBHOOK = 4;
  NOTIFICATION_CHANNEL_BARK = 5;
  NOTIFICATION_CHANNEL_SERVERCHAN = 6;
  NOTIFICATION_CHANNEL_DINGTALK = 7;
  NOTIFICATION_CHANNEL_WECHAT = 8;
  NOTIFICATION_CHANNEL_SLACK = 9;
  NOTIFICATION_CHANNEL_TELEGRAM = 10;
  NOTIFICATION_CHANNEL_DISCORD = 11;
}

// 接收者类型枚举
enum RecipientType {
  RECIPIENT_TYPE_UNSPECIFIED = 0;
  RECIPIENT_TYPE_USER = 1;
  RECIPIENT_TYPE_GROUP = 2;
  RECIPIENT_TYPE_ROLE = 3;
  RECIPIENT_TYPE_EMAIL = 4;
  RECIPIENT_TYPE_PHONE = 5;
  RECIPIENT_TYPE_DEVICE = 6;
}

// 接收者状态枚举
enum RecipientStatus {
  RECIPIENT_STATUS_UNSPECIFIED = 0;
  RECIPIENT_STATUS_PENDING = 1;
  RECIPIENT_STATUS_SENDING = 2;
  RECIPIENT_STATUS_SENT = 3;
  RECIPIENT_STATUS_DELIVERED = 4;
  RECIPIENT_STATUS_FAILED = 5;
  RECIPIENT_STATUS_SKIPPED = 6;
}

// 模板类型枚举
enum TemplateType {
  TEMPLATE_TYPE_UNSPECIFIED = 0;
  TEMPLATE_TYPE_TEXT = 1;
  TEMPLATE_TYPE_HTML = 2;
  TEMPLATE_TYPE_MARKDOWN = 3;
  TEMPLATE_TYPE_JSON = 4;
}

// 模板状态枚举
enum TemplateStatus {
  TEMPLATE_STATUS_UNSPECIFIED = 0;
  TEMPLATE_STATUS_DRAFT = 1;
  TEMPLATE_STATUS_ACTIVE = 2;
  TEMPLATE_STATUS_INACTIVE = 3;
  TEMPLATE_STATUS_ARCHIVED = 4;
}

// 通知元数据
message NotificationMetadata {
  string source = 1;
  string reference = 2;
  repeated string tags = 3;
  string category = 4;
  string tracking_id = 5;
  string external_id = 6;
  map<string, string> custom = 7;
}

// 接收者信息
message Recipient {
  string id = 1;
  string notification_id = 2;
  RecipientType type = 3;
  string identifier = 4;
  string name = 5;
  NotificationChannel channel = 6;
  string address = 7;
  map<string, string> variables = 8;
  RecipientStatus status = 9;
  google.protobuf.Timestamp sent_at = 10;
  google.protobuf.Timestamp delivered_at = 11;
  google.protobuf.Timestamp failed_at = 12;
  string error_message = 13;
  int32 retry_count = 14;
  google.protobuf.Timestamp created_at = 15;
  google.protobuf.Timestamp updated_at = 16;
}

// 通知信息
message Notification {
  string id = 1;
  string title = 2;
  string content = 3;
  NotificationType type = 4;
  NotificationPriority priority = 5;
  NotificationStatus status = 6;
  NotificationChannel channel = 7;
  repeated Recipient recipients = 8;
  string template_id = 9;
  map<string, string> variables = 10;
  NotificationMetadata metadata = 11;
  google.protobuf.Timestamp scheduled_at = 12;
  google.protobuf.Timestamp sent_at = 13;
  google.protobuf.Timestamp delivered_at = 14;
  google.protobuf.Timestamp failed_at = 15;
  string error_message = 16;
  int32 retry_count = 17;
  int32 max_retries = 18;
  string created_by = 19;
  google.protobuf.Timestamp created_at = 20;
  google.protobuf.Timestamp updated_at = 21;
}

// 模板变量
message TemplateVariable {
  string id = 1;
  string template_id = 2;
  string name = 3;
  string display_name = 4;
  string type = 5;
  string default_value = 6;
  bool required = 7;
  string description = 8;
  string validation = 9;
}

// 通知模板
message NotificationTemplate {
  string id = 1;
  string name = 2;
  string code = 3;
  TemplateType type = 4;
  TemplateStatus status = 5;
  string category = 6;
  string description = 7;
  repeated TemplateVariable variables = 8;
  repeated string tags = 9;
  string created_by = 10;
  string updated_by = 11;
  google.protobuf.Timestamp created_at = 12;
  google.protobuf.Timestamp updated_at = 13;
}

// 渠道配置
message ChannelConfig {
  string id = 1;
  NotificationChannel channel = 2;
  string name = 3;
  string description = 4;
  string owner_id = 5;
  map<string, string> config = 6;
  bool is_enabled = 7;
  google.protobuf.Timestamp created_at = 8;
  google.protobuf.Timestamp updated_at = 9;
}

// 创建通知请求
message CreateNotificationRequest {
  string title = 1;
  string content = 2;
  NotificationType type = 3;
  NotificationChannel channel = 4;
  NotificationPriority priority = 5;
  string template_id = 6;
  map<string, string> variables = 7;
  repeated CreateRecipientRequest recipients = 8;
  NotificationMetadata metadata = 9;
  google.protobuf.Timestamp scheduled_at = 10;
  int32 max_retries = 11;
  string created_by = 12;
}

// 创建接收者请求
message CreateRecipientRequest {
  RecipientType type = 1;
  string identifier = 2;
  string name = 3;
  string address = 4;
  map<string, string> variables = 5;
}

// 创建通知响应
message CreateNotificationResponse {
  Notification notification = 1;
  string message = 2;
}

// 从模板创建通知请求
message CreateNotificationFromTemplateRequest {
  string template_id = 1;
  NotificationType type = 2;
  NotificationChannel channel = 3;
  NotificationPriority priority = 4;
  map<string, string> variables = 5;
  repeated CreateRecipientRequest recipients = 6;
  NotificationMetadata metadata = 7;
  google.protobuf.Timestamp scheduled_at = 8;
  int32 max_retries = 9;
  string created_by = 10;
}

// 获取通知请求
message GetNotificationRequest {
  string id = 1;
  bool include_recipients = 2;
}

// 获取通知响应
message GetNotificationResponse {
  Notification notification = 1;
}

// 列出通知请求
message ListNotificationsRequest {
  string status = 1;
  string type = 2;
  string channel = 3;
  string created_by = 4;
  int32 offset = 5;
  int32 limit = 6;
}

// 列出通知响应
message ListNotificationsResponse {
  repeated Notification notifications = 1;
  int64 total = 2;
  int32 offset = 3;
  int32 limit = 4;
}

// 发送通知请求
message SendNotificationRequest {
  string notification_id = 1;
}

// 发送通知响应
message SendNotificationResponse {
  string message = 1;
  bool success = 2;
}

// 取消通知请求
message CancelNotificationRequest {
  string notification_id = 1;
}

// 取消通知响应
message CancelNotificationResponse {
  string message = 1;
  bool success = 2;
}

// 重试通知请求
message RetryNotificationRequest {
  string notification_id = 1;
}

// 重试通知响应
message RetryNotificationResponse {
  string message = 1;
  bool success = 2;
}

// 批量发送通知请求
message BatchSendNotificationsRequest {
  repeated string notification_ids = 1;
}

// 批量发送通知响应
message BatchSendNotificationsResponse {
  int32 total_count = 1;
  int32 success_count = 2;
  int32 failed_count = 3;
  repeated string failed_ids = 4;
  string message = 5;
}

// 创建模板请求
message CreateTemplateRequest {
  string name = 1;
  string code = 2;
  TemplateType type = 3;
  string category = 4;
  string description = 5;
  string subject = 6;
  string content = 7;
  repeated TemplateVariableRequest variables = 8;
  repeated string tags = 9;
  string created_by = 10;
}

// 模板变量请求
message TemplateVariableRequest {
  string name = 1;
  string display_name = 2;
  string type = 3;
  string default_value = 4;
  bool required = 5;
  string description = 6;
  string validation = 7;
}

// 创建模板响应
message CreateTemplateResponse {
  NotificationTemplate template = 1;
  string message = 2;
}

// 获取模板请求
message GetTemplateRequest {
  string id = 1;
}

// 获取模板响应
message GetTemplateResponse {
  NotificationTemplate template = 1;
}

// 渲染模板请求
message RenderTemplateRequest {
  string template_id = 1;
  NotificationChannel channel = 2;
  map<string, string> variables = 3;
}

// 渲染模板响应
message RenderTemplateResponse {
  string subject = 1;
  string content = 2;
}

// 创建渠道配置请求
message CreateChannelConfigRequest {
  NotificationChannel channel = 1;
  string name = 2;
  string description = 3;
  map<string, string> config = 4;
  string owner_id = 5;
}

// 创建渠道配置响应
message CreateChannelConfigResponse {
  ChannelConfig config = 1;
  string message = 2;
}

// 测试渠道请求
message TestChannelRequest {
  string channel_id = 1;
  map<string, string> test_data = 2;
}

// 测试渠道响应
message TestChannelResponse {
  string message = 1;
  bool success = 2;
}

// 获取通知统计请求
message GetNotificationStatsRequest {
  string start_date = 1;
  string end_date = 2;
}

// 通知统计响应
message GetNotificationStatsResponse {
  int64 total_count = 1;
  map<string, int64> status_counts = 2;
  map<string, int64> type_counts = 3;
  map<string, int64> channel_counts = 4;
  map<string, int64> priority_counts = 5;
  double success_rate = 6;
  double average_retries = 7;
  int64 last_hour_count = 8;
  int64 last_day_count = 9;
}

// 健康检查响应
message HealthResponse {
  string status = 1;
  string service = 2;
  string message = 3;
  google.protobuf.Timestamp timestamp = 4;
}
